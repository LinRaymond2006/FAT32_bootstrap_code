;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;FUNCTION "READ_ATA"
;EAX:SECTOR OFFSET
;EBX:BUFFER LOCATION
;NOTE:ASSUME THE HIGHER PART OF THE LBA ADDRESS 0 (ABLE TO ADDRESS 	)
;CX:NUMBER OF SECTORS TO READ

;RETURNS:NONE

;To read a disk:

;    Set the proper values in the disk address packet structure
;    Set DS:SI -> Disk Address Packet in memory
;    Set AH = 0x42
;    Set DL = "drive number" -- typically 0x80 for the "C" drive
;    Issue an INT 0x13.
;
;The carry flag will be set if there is any error during the transfer. AH should be set to 0 on success.
;
;To write to a disk, set AH = 0x43.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;FUNCTION "NXT_CLUSTER"
;EDX:CLUSTER NUMBER (AS A CALLER, THE CLUSTER NUMBER STARTS FROM 0)
;EBP:WHERE TO GO IF RECIEVE "EOF" VALUE

;RETURNS:
;EAX: THE SECTOR NUMBER OF THE CLUSTER
;EDX:NEXT CLUSTER NUMBER (THE CLUSTER NUMBER STARTS FROM 0)

;NECESSARY CONDITIONS:
;MACRO "FATBASE" HAVE TO BE DEFINED




;FUNCTION "CLUSTER2SECTOR"
;RECIEVE:
;EAX:CLUSTER NUMBER

;RETURN:
;EAX:SECTOR NUMBER

;NECESSARY CONDITIONS:
;FIRSTDATASECTOR MUST BE CALCULATED FIRST



;FUNCTION "CMP_STOP"
;RECIEVE:
;EAX:CLUSTER VALUE IN FAT TABLE
;BP: WHERE TO JUMP (SIZE:WORD)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;IF NEXTCLUSTER IS VALID CLUSTER(NOT STOP_SIGNAL): JMP LOADROOTDIR
;FAT[0]: SAME AS  MEDIA DESCRIPTOR
;FAT[1]: OCCUPIED
;FAT[N] VALUE (NOT ALL OF THEM ARE LISTED):
;	0X0000002~0XFFFFFEF:NEXT CLUSTER
;	0XFFFFFF8~0XFFFFFFF:EOF	
;NOTE:ASSUME NO BAD CLUSTERS (ONLY VALID CLUSTER OR EOF)