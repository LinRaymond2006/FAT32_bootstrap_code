;FOR FAT32 FILE SYSTEM ON HARD DISK
;CAUSION: THE SECTOR SIZE MUST BE 512
[ORG 0X7C3E]
[BITS 16]

;=====GLOBAL=MACROS=====
;ADDRESS-RELATIVE
%DEFINE STACKBASE	0X7C00
%DEFINE BUFFERBASE	0X7E00
%DEFINE TMPBASE		0X500

;FAT32-RELATIVE
;LOAD THE ROOTDIR, GET THE FIRST CLUSTER OF THE GIVEN 
;FILE, THAN OVERWRITE THE ROOTDIR REGION WITH FAT TABLE, 
;AND WRITE THE LINKED LIST OF SECTOR NUMBER TO "TMPBASE" IN LOW MEMORY
;0X500, ONCETHOSE STEPS ARE DONE, LOAD THE GIVEN FILE INFO "BUFFERBASE"
;, WHICH IS 0X7E00, RIGHT AFTER THE BOOT SECTOR REGION

%DEFINE ROOTDIRBASE	0X7E00
%DEFINE FATBASE		0X7E00
%DEFINE SFNSIZE		32

;=======================

[SECTION .CODE]
;=========================

INIT:
MOV AX, CX
MOV DS, AX
MOV ES, AX
MOV SS, AX
MOV SP, STACKBASE

DO_ENABLE_UNREAL_MODE:
CLI                    ; NO INTERRUPTS
PUSH DS                ; SAVE REAL MODE
LGDT [GDTINFO]         ; LOAD GDT REGISTER
MOV  EAX, CR0          ; SWITCH TO PMODE BY
OR AL,1                ; SET PMODE BIT
MOV  CR0, EAX
JMP $+2                ; TELL 386/486 TO NOT CRASH
MOV  BX, 0X08          ; SELECT DESCRIPTOR 1
MOV  DS, BX            ; 8H = 1000B
AND AL,0XFE            ; BACK TO REALMODE
MOV  CR0, EAX          ; BY TOGGLING BIT AGAIN
POP DS                 ; GET BACK OLD SEGMENT
STI

DO_LOAD_ROOTDIR:
;FROM 0X7E00 TO 0X7FFFF, 480KIB IN TOTAL, ABLE TO STORE 960 SECTORS (ASSUME 512 BYTES PER SECTOR)
;LOAD ROOTDIR AND SEARCH FOR THE GIVEN FILE, SAVE THE FIRST
;CLUSTER IN REGISTER AND GO ON LOADING FAT TABLE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;FUNCTION: "READ_ATA'
;EAX:SECTOR OFFSET
;EBX:BUFFER LOCATION
;CX:NUMBER OF SECTORS TO READ




;=========================
[SECTION .DATA]
GDTINFO:
	DW GDT_END - GDT - 1   ;LAST BYTE IN TABLE
	DD GDT                 ;START OF TABLE

GDT         DD 0,0        ; ENTRY 0 IS ALWAYS UNUSED
FLATDESC    DB 0XFF, 0XFF, 0, 0, 0, 10010010B, 11001111B, 0
GDT_END:


[SECTION SUBROUTINE]
%INCLUDE "MAIN.INC"