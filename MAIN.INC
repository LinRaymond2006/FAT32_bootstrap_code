;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;EAX:SECTOR OFFSET
;EBX:BUFFER LOCATION
;CX:NUMBER OF SECTORS TO READ
%DEFINE BASE_PORT 0X1F0
;0X1F0:ATA0-MASTER
;READING VIA LBA24


READ_ATA:
	
	
	;PUSH EDI
	;PUSH DX
	;PUSH EAX
	PUSHAD
	
	PUSH EAX
	MOV DI, CX
	MOV DX, BASE_PORT + 2
	MOV AL, CL
	OUT DX, AL 		;HOW MANY SECTORS TO READ
	POP EAX
	MOV DX, BASE_PORT + 3
	OUT DX, AL  	;LBADDR 0~7
	MOV CL, 8
	SHR EAX, CL
	MOV DX, BASE_PORT + 4
	OUT DX, AL  	;LBADDR 8~15
	SHR EAX, CL
	MOV DX, BASE_PORT + 5
	OUT DX, AL  	;LBADDR 16~23
	SHR EAX, CL
	AND AL, 0XE0    ;BIT7~BIT4=1110->USING LBA
	OR AL, 0XE0
	MOV DX, BASE_PORT + 6
	OUT DX, AL
	MOV DX, BASE_PORT + 7
	MOV AL, 0X20
	OUT DX, AL  	;0X20->READ

.DISKSTAT_BUSY: ;WRITE->COMMAND WORD PORT. READ->DISK STATUS
	NOP
	IN AL, DX
	AND AL, 0X88  ;BIT3=1->READY, BIT7=1->DISK IN BUSY
	CMP AL, 0X08
	JNZ .DISKSTAT_BUSY
	MOV AX, DI
	MOV DX, 256
	MUL DX
	MOV CX, AX
	;DI=LOADER_SECT_SIZE, EACH SECTOR IS COMPOSED BY 512 BYTES
	;THEREFORE NEED DI*512/2 TIMES TO FINISH THE OPERATION(2BYTES COMPRISE A WORD)
	MOV DX, BASE_PORT
.CONTRD:
	IN AX, DX
	;;;;;;;;;;USE EBX INSTEAD OF BX TO ADDRESS IN UNREAL MODE WITH A20 ENABLED HERE!;;;;;;;;;;;;;;;;;;;;
	MOV [EBX], AX
	ADD EBX, 2
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	LOOP .CONTRD
	
	;POP EAX
	;POP DX
	;POP EDI
	POPAD
	
	RET